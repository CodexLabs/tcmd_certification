/*
	Localization strings file. To translate, copy the entire "en-US" branch, paste in as new member of the object, 
	set its name to be the two-letter language code, and translate each string.
	As shown, strings can include simple HTML.
*/
String.toLocaleString({
	"en-US": {
		"%l_filetitle": "Android API Deep Dive",
		"%l_subtitle": "Advanced Titanium Mobile Development",
		"%l_lessontitle": "Android API Deep Dive",
		"%l_slidenote_titleslide": "<b>Module time: 90 mins</b><br/>(60 mins teaching, 30 mins lab)",

		"%l_agenda_title": "Agenda",
		"%l_agenda1": "Platform characteristics",
		"%l_agenda2": "Android vocabulary",
		"%l_agenda3": "Android Specific Configuration Options",
		"%l_agenda4": "Android Specific UI APIs",
		"%l_agenda5": "Android Specific Non-visual APIs",
		"%l_agenda6": "Lab",
		"%l_slidenote_agenda": "",

		"%l_android_strengths": "Android Platform Strengths",
		"%l_open": "Open nature (Hackable)",
		"%l_variety": "Variety of app distribution methods",
		"%l_low_cost": "Low cost handsets on a variety of hardware",
		"%l_java": "Java-based environment (common skill set)",
		"%l_great": "Many great Google apps",
		"%l_slidenote_android_strengths": "Some carriers restrict installation of non-market apps",
		
		"%l_ti_android_strengths": "Ti Android Platform Strengths",
		"%l_ios_support": "Lots of support for OS specific functionality, focus on 'best of breed' experience",
		"%l_easy_dep": "Easy deployment to devices for testing",
		"%l_easy_distr": "Easy to distribute apps for testing",
		"%l_easy_market": "Easy to deploy apps to market",
		"%l_slidenote_ti_android_strengths": "",
		
		"%l_android_weaknesses": "Android Platform Weaknesses",
		"%l_large_dist": "Large distribution of device screen types, hardware capabilities, OS versions...",
		"%l_less_active": "Less active app economy (fewer purchases)",
		"%l_confusing": "Confusing UX (Linux on a handset!)",
		"%l_slidenote_android_weaknesses": "<ul><li>Carrier themes add a layer of complexity in UI design (button backgrounds or default text vary by carrier themes, for example)</li><li>UX is perhaps more confusing for novices, general public than for typical developer or tech geek</li></ul>",
		
		"%l_ti_android_weaknesses": "Ti Android Platform Weaknesses?",
		"%l_parity": "API Parity - Platform diversity can make adding features slower",
		"%l_builtin_ui": "Not as many built-in UI components (platform weakness really)",
		"%l_js_engine": "JavaScript engine performance - V8 is fast!(but Rhino not so much)",
		"%l_slidenote_ti_android_weaknesses": "<ul><li>API parity issues is basically a growing-pains result, we're doing our best to catch up and achieve parity</li><li>SDK 1.8 added V8 JS engine, which is much faster than Rhino</li><li>Rhino also supported for pre-Android 2.2 devices</li></ul>",
		
		"%l_many_dev": "Many devices &amp; form factors - test!",
		"%l_slidenote_many_dev": "Phones, tablets, various operating system versions, vendor skins, carrier add-ons, forked versions<br>Need to test as widely as possible<br>Test on device",
		
		"%l_android_key": "Android Application Key Components",
		"%l_activities": "Activities",
		"%l_services": "Services",
		"%l_broadcast": "Broadcast Receivers",
		"%l_intents": "Intents",
		"%l_necessary": "It is necessary to understand and implement these in Ti to provide a native experience",		
		"%l_android_url": "<a href='http://developer.android.com/guide/topics/fundamentals.html'>http://developer.android.com/guide/topics/fundamentals.html</a>",
		"%l_slidenote_android_key": "<ul><li>Every app has at least one activity and might implement the other components listed here. </li><li><b>READ THE ANDROID APP FUNDAMENTALS!  Don't cheat and hope Titanium will understand all of Aandroid for you!</b></li></ul>",
		
		"%l_android_vocab": "Android Vocabulary",
		"%l_activity": "Activity",
		"%l_activity_def": "'An activity is a single, focused thing that the user can do. Almost all activities interact with the user, so the Activity class takes care of creating a window for you in which you can place your UI'",
		"%l_activity_url": "<a href='http://developer.android.com/reference/android/app/Activity.html'>http://developer.android.com/reference/android/app/Activity.html</a>",		
		"%l_slidenote_android_vocab": "An app is made up from one or more activities: one to list email messages, one to compose a message, one to read a message, etc.",
		
		"%l_service": "Service",
		"%l_service_def": "'A Service is an application component representing either an application's desire to perform a longer-running operation while not interacting with the user or to supply functionality for other applications to use.'",
		"%l_service_url": "<a href='http://developer.android.com/reference/android/app/Service.html'>http://developer.android.com/reference/android/app/Service.html</a>",
		"%l_slidenote_android_vocab_2": "<ul><li>Play music in the background</li><li>Check a network source periodically</li><li>Listen for data from a local or remote resource</li></ul>",
		
		"%l_broadcast": "Broadcast Receiver",
		"%l_broadcast_def": "'A broadcast receiver is a component that responds to system-wide broadcast announcements'",
		"%l_broadcast_url": "<a href='http://developer.android.com/reference/android/content/BroadcastReceiver.html'>http://developer.android.com/reference/android/content/BroadcastReceiver.html</a>",
		"%l_slidenote_android_vocab_3": "<ul><li>System broadcasts: screen is on/off, battery is low, picture was captured</li><li>Your app could initiate a broadcast (when data is available to be used by other apps) or react to broadcasts</li><li>Broadcasts don't interact with the user (no UI) except via a notification in the Notification Bar</li></ul>",
		
		"%l_intent": "Intent",
		"%l_intent_def": "'Three of the core components of an application - activities, services, and broadcast receivers - are activated through messages, called intents.'",
		"%l_intent_url": "<a href='http://developer.android.com/guide/topics/intents/intents-filters.html'>http://developer.android.com/guide/topics/intents/intents-filters.html</a>",
		"%l_slidenote_android_vocab_4": "<ul><li>Intents are basically message objects that hold data which pass from one activity to a service, or one activity to another activity, etc.</li><li>Broadcasts are communicated in the form of events</li><li>For security reasons, your app can't directly start an activity in another app. Instead, you send an intent requesting that activity and the OS starts the activity on your app's behalf</li><li>You can request service from another activity directly (call on it) or you can publish an intent and a 'filter' describing the type of service you need and let the OS find appropriate activities for you (think of how the Share button works &mdash; your app is publishing some text and the OS is returning all the activities that could share that text: email, twitter, etc.</li></ul>",
		
		"%l_all_these": "All of these work in Ti",
		"%l_slidenote_all_these": "Much of this goes on behind the scenes without you having to worry a lot over it. But you can manage the process and take specific actions to capitalize on this application architecture",
		
		"%l_android_config": "Android Configuration",
		"%l_core_os": "Most of the core OS services are configured in AndroidManifest.xml",
		"%l_tiapp": "AndroidManifest.xml properties can be configured in tiapp.xml",
		"%l_custom": "You can also have a custom AndroidManifest.xml",
		"%l_demo_tiapp": "Demo: tiapp.xml config and custom AndroidManifest.xml",
		"%l_slidenote_android_config": "<ul><li>Activities, services, &amp; content providers not defined in the manifest are not visible to the OS and therefore cannot be started</li><li>Titanium adds these elements, but you could also define or configure them yourself</li><li>Also use the manifest to define hardware needs (orientation, screen size &amp; density, platform version)</li></ul><b>Demo</b><ul><li>Show kitchen sink tiapp.xml &mdash; activity &amp; services configurations</li><li>Via finder, open KS/build/android/AndroidManifest.xml</li><li><intent-filter> describes the capabilities of your activities so the OS knows what type of intents they could respond to</li><li>Explain how you could create a custom manifest (covered in Orientation module)</li></ul>",
		"%l_android_ui_api": "Android UI APIs",
		"%l_slidenote_android_ui_api": "",

		"%l_windows": "Windows",
		"%l_title_bar": "Title bar is only present under specific conditions &mdash; depends on how you open the window",
		"%l_window_activity": "Windows are generally associated with an Android activity (though not always)",
		"%l_not_quite": "Not quite as nimble as iOS windows in terms of animation",
		"%l_windows_url": "<a href='http://docs.appcelerator.com/titanium/2.0/index.html#!/guide/Android_Platform_Overview'>docs.appcelerator.com/titanium/2.0/index.html#!/guide/Android_Platform_Overview</a>",
		"%l_slidenote_windows": "A 'heavyweight' window is Ti terminology for an Activity<br/><br>You can have a lightweight window that isn't exactly equivalent to an Activity, more like a full-screen view<br><br/>To force a Ti window to be a heavyweight window (an activity), set navBarHidden=true or set fullscreen=true or false and see the URL here for a couple of extra ways",

		"%l_hardware": "Hardware Menu",
		"%l_menu_options": "Menu of options displayed when hardware button is pressed",
		"%l_asociated_activity": "Associated with an activity (a Titanium Window)",
		"%l_tabgroup": "TabGroup has N activities, and can have N menus",
		"%l_text_icons": "Can configure text and icons",
		"%l_demo_menu": "Demo: Menu creation options",
		"%l_slidenote_hardware": "Demo: KitchenSink &mdash; android_menu1, 2, and 3",

		"%l_android_labels": "Android Labels",
		"%l_much_ios": "Much more capable than iOS Labels",
		"%l_styling_props": "Styling properties on creation same cross platform",
		"%l_android_inline": "Android can display inline HTML (basic formatting tags)",
		"%l_android_links": "Android can display links inline (web, tel, maps)",
		"%l_demo_label": "Demo: Label gymnastics",
		"%l_slidenote_android_labelsv2": "Demo - KitchenSink: label_linkify.js<br>iOS supports similar auto-linking on text areas<br/>Ti 3.0: Android now supports autolinking on textareas",

		"%l_toast": "Toast Notifications",
		"%l_toast_image": "<img src='images/toast.png' style='margin-top:5px;height:380px;float:right;'/>",
		"%l_simple_txt": "Simple text display over all activities",
		"%l_control_pos": "Can control positioning on screen",
		"%l_render_ios": "Rendering will be different based on OS version and skin",
		"%l_demo_notif": "Demo: Notification",
		"%l_slidenote_toast": "Demo: KitchenSink Platform>Notifications<br>And see notification.js<br>The offsetX and offSetY coordinates are relative to the default location for the notification<br>and corresponds to the center point of the notification bubble",

		"%l_hijack": "Hijacking the Back Button",
		"%l_override_back": "Sometimes you want to override back button for your activity to provide better behavior",
		"%l_wizard": "Example: Wizard interface, where you want 'back' to go back to a previous state in the UI",
		"%l_careful": "Careful about this!  Users expect back to go back to another activity (most of the time)",
		"%l_demo_back": "Demo: back button event",
		"%l_slidenote_hijackv2": "<ul><li><b>Demo</b>AndroidBackDemo project on the TCMD github repository<br>https://github.com/appcelerator-training/tcmd_certification/blob/master/workspace/AndroidBackDemo.zip</li><li>View hijacks the back button &amp; closes<br>Then restores it so you can close the window</li><li>In the event listener, you can monitor the other hardware buttons in the form:<br/>androidcamera<br>androidhome (colon removed in Ti 3.0, e.g. was android:camera)</li></ul>",
		
		"%l_non_visual_api": "Non-Visual APIs",
		"%l_slidenote_non_visual_api": "",
		
		"%l_launch_act": "Launching Activities",
		"%l_launch_other": "You can launch other apps (activities) from JS",
		"%l_intent_pass": "Need to have an intent object to pass",
		"%l_many_built": "Many built in intents to use",
		"%l_forging_ti": "Forging Titanium #9 - Android Intents Cookbook",
		"%l_launch_act_url": "<a href='http://bit.ly/ryOSW4'>http://bit.ly/ryOSW4 </a>",
		"%l_slidenote_launch_act": "An app is made up from one or more activities: one to list email messages, one to compose a message, one to read a message, etc.<br>Other apps can start an activity within your app and your app can start activities in other apps<br>This gives a way to share functionality and make it appear to be part of your app",
		"%l_service_supp": "Service Support",
		"%l_js_service": "You can have JS-based services running in the background",
		"%l_can_comm": "Can communicate with it from your main application",
		"%l_demo_bg": "Demo: background service",
		"%l_slidenote_service_supp": "Demo KitchenSink<br>See android_services.js and Resources/android/testservice.js<br>Plus see entry in tiapp.xml",
		"%l_calendar_int": "Calendar and Event Integration",
		"%l_android_excl": "Android exclusive feature, can't do it on iOS",
		"%l_add_events": "Add events to calendars, and alarms for status bar",
		"%l_calendar_module": "Ti.Android.Calendar module",
		"%l_slidenote_scalendar_int": "",
		"%l_app_resources": "Application Resources",
		"%l_js_r": "JS access to R.java - http://developer.android.com/reference/android/R.html",
		"%l_drawable": "R.drawable - built in icons for ImageView, etc.",
		"%l_r_string": "R.string - OS localized string for 'OK', 'Cancel', etc",
		"%l_android_docs": "Android docs required to see properties",
		"%l_demo_resources_js": "Demo: R resources in JS",
		"%l_slidenote_app_resources": "Resources are assets, such as images, strings, layouts, animations, etc that are maintained external from your app so that you can swap, maintain, management outside of your code<br>R is the class that represents resources in your app<br>Accessible in Ti. via Android.R class, see http://developer.appcelerator.com/apidoc/mobile/latest/Titanium.App.Android.R-object<br>Demo: KitchenSink android_menu_2.js, line 24<br>Uses some of the built-in icons",
		
		"%l_qa": "Q&amp;A",
		"%l_slidenote_qa": "",
		
		"%l_lab_goals": "Lab Goals",
		"%l_examine": "Examine the ways you can share data between apps on Android",
		"%l_labURL": "<a href='https://wiki.appcelerator.org/display/td/350+-+Android+API+Deep+Dive'>wiki.appcelerator.org/display/td/350+-+Android+API+Deep+Dive</a>",
		"%l_slidenote_lab_goals": "In this lab, you will enable an app to share text with other apps on the user's device. The app provides a simple text box. You'll plug in the code to share the text that users enter via an intent."
		
	},
	"es-es": {
		"%l_filetitle": "API Android visto a fondo",
		"%l_subtitle": "Titanium Mobile avanzado para desarrollo",
		"%l_lessontitle": "API Android visto a fondo",
		"%l_slidenote_titleslide": "<b>Module time: 90 mins</b><br/>(60 mins teaching, 30 mins lab)",

		"%l_agenda_title": "Agenda",
		"%l_agenda1": "Caracterizticas de la plataforma ",
		"%l_agenda2": "Vocabulario Android",
		"%l_agenda3": "Opciones de configuración específicas de Android",
		"%l_agenda4": "Interfaz especifica del APIs de Android",
		"%l_agenda5": "API específica no visual de Android",
		"%l_agenda6": "Laboratorio",
		"%l_slidenote_agenda": "",

		"%l_android_strengths": "Fortalezas de la plataforma Android",
		"%l_open": "De naturaleza abierta (hackeable)",
		"%l_variety": "Variedad de métodos de distribución de aplicaciones",
		"%l_low_cost": "Teléfonos de bajo coste, por lo tanto existe una variedad de hardware",
		"%l_java": "Basada en un ambiente Java (conjunto de habilidades comunes)",
		"%l_great": "Gran número de aplicaciones de Google",
		"%l_slidenote_android_strengths": "Some carriers restrict installation of non-market apps",
		
		"%l_ti_android_strengths": "Fortalezas de la plataforma Ti Android",
		"%l_ios_support": "Mucha soporte a la funcionalidad específica de sistema operativo,no se olviden en 'best of breed' (lo mejor del mercado) experiencia",
		"%l_easy_dep": "Fácil despliegue de dispositivos para las pruebas",
		"%l_easy_distr": "Fácil de distribuir aplicaciones para probar",
		"%l_easy_market": "Fácil de implementar aplicaciones en el mercado",
		"%l_slidenote_ti_android_strengths": "",
		
		"%l_android_weaknesses": "Debilidades de la plataforma Android",
		"%l_large_dist": "La gran distribución de los tipos de pantalla de dispositivos, las capacidades de hardware, versiones del sistema operativo...",
		"%l_less_active": "Less active app economy (fewer purchases)",
		"%l_less_active": "Economía de aplicaciones menos (reducción en compras)",
		"%l_confusing": "Confusión con UX (Linux en un teléfono!)",
		"%l_slidenote_android_weaknesses": "<ul><li>Carrier themes add a layer of complexity in UI design (button backgrounds or default text vary by carrier themes, for example)</li><li>UX is perhaps more confusing for novices, general public than for typical developer or tech geek</li></ul>",
		
		"%l_ti_android_weaknesses": "Devilidades de la plataforma Ti Android?",
		"%l_parity": "Paridad API - La diversidad de plataforma puede hacer más lenta la adición de características",
		"%l_builtin_ui": "Not as many built-in UI components (platform weakness really)",
        "%l_builtin_ui": "No hay muchos componentes UI (debilidad de la plataforma, no Titanium)",		
		"%l_js_engine": "El rendimiento del motor JavaScript - V8 es rápido (pero Rhino no tanto)",
		"%l_slidenote_ti_android_weaknesses": "<ul><li>API parity issues is basically a growing-pains result, we're doing our best to catch up and achieve parity</li><li>SDK 1.8 added V8 JS engine, which is much faster than Rhino</li><li>Rhino also supported for pre-Android 2.2 devices</li></ul>",
		
		"%l_many_dev": "Muchos dispositivos y factores de forma<br><br> -Pruebas y mas pruebas! <br> en diferentes dispositvos",
		"%l_slidenote_many_dev": "Phones, tablets, various operating system versions, vendor skins, carrier add-ons, forked versions<br>Need to test as widely as possible<br>Test on device",
		
		"%l_android_key": "Aplicación y componenetes clave para Android",
		"%l_activities": "Actividades",
		"%l_services": "Servicios",
		"%l_broadcast": "Receptores de transmisión",
		"%l_intents": "Intenciones",
		"%l_necessary": "Es necesario entender y aplicar estos en Ti para proporcionar una experiencia nativa",		
		"%l_android_url": "<a href='http://developer.android.com/guide/topics/fundamentals.html'>http://developer.android.com/guide/topics/fundamentals.html</a>",
		"%l_slidenote_android_key": "<ul><li>Every app has at least one activity and might implement the other components listed here. </li><li><b>READ THE ANDROID APP FUNDAMENTALS!  Don't cheat and hope Titanium will understand all of Aandroid for you!</b></li></ul>",
		
		"%l_android_vocab": "Vocabulario Android",
		"%l_activity": "Actividades",
		"%l_activity_def": "'Una actividad es una sola cosa, centrada en lo que el usuario pueda hacer. Casi todas las actividades de interactuar con el usuario, por lo que el tipo de actividad se ocupa de la creación de una ventana para que usted puede colocar su UI'",
		"%l_activity_url": "<a href='http://developer.android.com/reference/android/app/Activity.html'>http://developer.android.com/reference/android/app/Activity.html</a>",		
		"%l_slidenote_android_vocab": "An app is made up from one or more activities: one to list email messages, one to compose a message, one to read a message, etc.",
		
		"%l_service": "Servicios",
		"%l_service_def": "'Un servicio es un componente de aplicación que representa ya sea el deseo de una aplicación para realizar una operación más larga duración, mientras que no interactúa con el usuario, o de proporcionar la funcionalidad de otras aplicaciones para utilizar.'",
		"%l_service_url": "<a href='http://developer.android.com/reference/android/app/Service.html'>http://developer.android.com/reference/android/app/Service.html</a>",
		"%l_slidenote_android_vocab_2": "<ul><li>Play music in the background</li><li>Check a network source periodically</li><li>Listen for data from a local or remote resource</li></ul>",
		
		"%l_broadcast": "Receptor de transmisiones",
		"%l_broadcast_def": "'Un receptor de transmisión es un componente que responde a mensajes de difusión en todo el sistema'",
		"%l_broadcast_url": "<a href='http://developer.android.com/reference/android/content/BroadcastReceiver.html'>http://developer.android.com/reference/android/content/BroadcastReceiver.html</a>",
		"%l_slidenote_android_vocab_3": "<ul><li>System broadcasts: screen is on/off, battery is low, picture was captured</li><li>Your app could initiate a broadcast (when data is available to be used by other apps) or react to broadcasts</li><li>Broadcasts don't interact with the user (no UI) except via a notification in the Notification Bar</li></ul>",
		
		"%l_intent": "Intenciones",
		"%l_intent_def": "'Tres de los componentes básicos de una aplicación - las actividades, servicios y receptores de transmisión - se activan a través de mensajes, llamada intenciones.'",
		"%l_intent_url": "<a href='http://developer.android.com/guide/topics/intents/intents-filters.html'>http://developer.android.com/guide/topics/intents/intents-filters.html</a>",
		"%l_slidenote_android_vocab_4": "<ul><li>Intents are basically message objects that hold data which pass from one activity to a service, or one activity to another activity, etc.</li><li>Broadcasts are communicated in the form of events</li><li>For security reasons, your app can't directly start an activity in another app. Instead, you send an intent requesting that activity and the OS starts the activity on your app's behalf</li><li>You can request service from another activity directly (call on it) or you can publish an intent and a 'filter' describing the type of service you need and let the OS find appropriate activities for you (think of how the Share button works &mdash; your app is publishing some text and the OS is returning all the activities that could share that text: email, twitter, etc.</li></ul>",
		
		"%l_all_these": "Todos ellos trabajan en Titanium",
		"%l_slidenote_all_these": "Much of this goes on behind the scenes without you having to worry a lot over it. But you can manage the process and take specific actions to capitalize on this application architecture",
		
		"%l_android_config": "Configuración de Android",
		"%l_core_os": "La mayoría de los servicios básicos del sistema operativo se configuran en AndroidManifest.xml",
		"%l_tiapp": "Las propiedades del AndroidManifest.xml pueden ser configuradas en tiapp.xml",
		"%l_custom": "Usted tambien puede tener una configuracion personalizada en AndroidManifest.xml",
		"%l_demo_tiapp": "Demo: tiapp.xml configure y personalize AndroidManifest.xml",
		"%l_slidenote_android_config": "<ul><li>Activities, services, &amp; content providers not defined in the manifest are not visible to the OS and therefore cannot be started</li><li>Titanium adds these elements, but you could also define or configure them yourself</li><li>Also use the manifest to define hardware needs (orientation, screen size &amp; density, platform version)</li></ul><b>Demo</b><ul><li>Show kitchen sink tiapp.xml &mdash; activity &amp; services configurations</li><li>Via finder, open KS/build/android/AndroidManifest.xml</li><li><intent-filter> describes the capabilities of your activities so the OS knows what type of intents they could respond to</li><li>Explain how you could create a custom manifest (covered in Orientation module)</li></ul>",
		"%l_android_ui_api": "APIs de la interfaz de usuario Android",
		"%l_slidenote_android_ui_api": "",
		
		"%l_windows": "Ventanas",
		"%l_title_bar": "Barra de título sólo está presente en determinadas condiciones - depende de cómo se abre la ventana",
		"%l_window_activity": "Las ventanas están generalmente asociadas con una actividad Android (aunque no siempre)",
		"%l_not_quite": "Las ventanas no son tan agiles en términos de animación como iOS",
		"%l_windows_url": "<a href='http://docs.appcelerator.com/titanium/2.0/index.html#!/guide/Android_Platform_Overview'>docs.appcelerator.com/titanium/2.0/index.html#!/guide/Android_Platform_Overview</a>",
		"%l_slidenote_windows": "Es un 'peso pesado' de la ventana es la terminología de Ti para realizar una actividad<br/><br>Usted puede tener una ventana de peso ligero que no es exactamente equivalente a una actividad, más como una vista a pantalla completa<br><br/>Para forzar a una ventana de Ti a ser una ventana de peso pesado (una actividad), debe estar navBarHidden = true o fullscreen = true o false, y ver la URL aquí para un par de maneras adicionales",
		
		"%l_hardware": "Menu del Hardware",
		"%l_menu_options": "Menú de opciones que se muestran cuando se pulsa el botón de hardware",
		"%l_asociated_activity": "Asociado con una actividad (una ventana de Titanium)",
		"%l_tabgroup": "TabGroup tiene N actividades, y puede tener N menús",
		"%l_text_icons": "Se puede configurar el texto y los iconos",
		"%l_demo_menu": "Demo:  Creación de opciones del menú",
		"%l_slidenote_hardware": "Demo: KitchenSink &mdash; android_menu1, 2, y 3",
		
		"%l_android_labels": "Etiquetas para Android",
		"%l_much_ios": "Mucho más capaces que las etiquetas de iOS",
		"%l_styling_props": "Propiedades de estilo de multiplataforma",
		"%l_android_inline": "Android puede mostrar HTML en línea (etiquetas de formato básico)",
		"%l_android_links": "Android puede mostrar los enlaces en línea (web, teléfono, mapas)",
		"%l_demo_label": "Demo: Usando etiquetas",
		"%l_slidenote_android_labels": "Demo - KitchenSink: label_linkify.js<br>iOS supports similar auto-linking on text areas",
		
		"%l_toast": "Notificaciones (Toast)",
		"%l_toast_image": "<img src='images/toast.png' style='margin-top:5px;height:380px;float:right;'/>",
		"%l_simple_txt": "Pantalla de texto simple a través de todas las actividades",
		"%l_control_pos": "Puede controlar la posición en la pantalla",
		"%l_render_ios": "Representación será diferente dependiendo de la versión del sistema operativo del tema",
		"%l_demo_notif": "Demo: Notificaciones",
		"%l_slidenote_toast": "Demo: KitchenSink Platform>Notificaciones<br>y vease notification.js<br>Las coordenadas offsetX y OffsetY son relativas a la ubicación predeterminada para la <br> notificación y se corresponde con el punto central de la burbuja de notificación",
		
		"%l_hijack": "El secuestro en el botón Atrás",
		"%l_override_back": "A veces se desea reemplazar el botón Atrás de su actividad para proporcionar un mejor comportamiento",
		"%l_wizard": "Ejemplo: interfaz de asistente, en la que desea 'atrás' para volver a un estado anterior en la interfaz de usuario",
		"%l_careful": "Cuidado con esto! Los usuarios esperan de nuevo a volver a otra actividad (la mayor parte del tiempo)",
		"%l_demo_back": "Demo: eventos de botón volver",
		"%l_slidenote_hijack": "<ul><li><b>Demo</b>AndroidBackDemo project on the TCMD github repository<br>https://github.com/appcelerator-training/tcmd_certification/blob/master/workspace/AndroidBackDemo.zip</li><li>View hijacks the back button &amp; closes<br>Then restores it so you can close the window</li><li>In the event listener, you can monitor the other hardware buttons in the form:<br>android:camera<br>android:home</li></ul>",
		
		"%l_non_visual_api": "APIs no visuales",
		"%l_slidenote_non_visual_api": "",
		
		"%l_launch_act": "Lanzamiento de actividades",
		"%l_launch_other": "Puede iniciar otras aplicaciones (actividades) desde JS",
		"%l_intent_pass": "Necesitas contar con un objeto de Intención (intent) para pasarlo",
		"%l_many_built": "Muchos pre-establecidos que se pueden utilizar",
		"%l_forging_ti": "Forging Titanium #9 - Recetario de intenciones de Android",
		"%l_launch_act_url": "<a href='http://bit.ly/ryOSW4'>http://bit.ly/ryOSW4 </a>",
		"%l_slidenote_launch_act": "An app is made up from one or more activities: one to list email messages, one to compose a message, one to read a message, etc.<br>Other apps can start an activity within your app and your app can start activities in other apps<br>This gives a way to share functionality and make it appear to be part of your app",
		
		"%l_service_supp": "Soporte de servicios",
		"%l_js_service": "Usted puede ejecutar servicios de JS en segundo plano",
		"%l_can_comm": "Puede comunicarse con ellos desde la aplicación principal",
		"%l_demo_bg": "Demo: servicios de segundo plano",
		"%l_slidenote_service_supp": "Demo KitchenSink<br>vea android_services.js y Resources/android/testservice.js<br> véase la entrada en tiapp.xml",
		
		"%l_calendar_int": "Integraciones de Calendarios y eventos",
		"%l_android_excl": "Caracteristica exclusiva de  Android, no se puede usar en iOS",
		"%l_add_events": "Añadir eventos a los calendarios, y las alarmas de la barra de estado",
		"%l_calendar_module": "Modulo Ti.Android.Calendar",
		"%l_slidenote_scalendar_int": "",
		
		"%l_app_resources": "Recursos de Aplicaciones",
		"%l_js_r": "JS accesa a R.java - http://developer.android.com/reference/android/R.html",
		"%l_drawable": "R.drawable - construido en los iconos de ImageView, etc.",
		"%l_r_string": "R.string - OS cadena localizada para 'OK', 'Cancel', etc",
		"%l_android_docs": "Android documentación necesaria para ver las propiedades",
		"%l_demo_resources_js": "Demo: R recursos en JS",
		"%l_slidenote_app_resources": "Resources are assets, such as images, strings, layouts, animations, etc that are maintained external from your app so that you can swap, maintain, management outside of your code<br>R is the class that represents resources in your app<br>Accessible in Ti. via Android.R class, see http://developer.appcelerator.com/apidoc/mobile/latest/Titanium.App.Android.R-object<br>Demo: KitchenSink android_menu_2.js, line 24<br>Uses some of the built-in icons",
		
		"%l_qa": "Preguntas",
		"%l_slidenote_qa": "",
		
		"%l_lab_goals": "Objetivos de laboratorio",
		"%l_examine": "Examinar las formas en que pueden compartir datos entre aplicaciones en Android",
		"%l_labURL": "<a href='https://wiki.appcelerator.org/display/td/350+-+Android+API+Deep+Dive'>wiki.appcelerator.org/display/td/350+-+Android+API+Deep+Dive</a>",
		"%l_slidenote_lab_goals": "In this lab, you will enable an app to share text with other apps on the user's device. The app provides a simple text box. You'll plug in the code to share the text that users enter via an intent.",
		
	}	
	
});
